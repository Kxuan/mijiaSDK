/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _XmppClient = __webpack_require__(1);

	var _XmppClient2 = _interopRequireDefault(_XmppClient);

	var _Type = __webpack_require__(5);

	var _Type2 = _interopRequireDefault(_Type);

	var _IQ = __webpack_require__(7);

	var _IQ2 = _interopRequireDefault(_IQ);

	var _MessageIdFilter = __webpack_require__(9);

	var _MessageIdFilter2 = _interopRequireDefault(_MessageIdFilter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var DeviceManipulator = function () {
	    function DeviceManipulator() {
	        _classCallCheck(this, DeviceManipulator);

	        this.xmpClient = new _XmppClient2.default();
	    }

	    _createClass(DeviceManipulator, [{
	        key: 'init',
	        value: function init(handler) {
	            this.xmpClient.init(handler);
	        }
	    }, {
	        key: 'getInfo',
	        value: function getInfo(deviceInfo, handler) {
	            var query = {
	                name: 'getInfo',
	                ns: 'urn:bxmp:device',
	                body: deviceInfo
	            };
	            var getInfo = new _IQ2.default(_Type2.default.GET, query);
	            this.xmpClient.sendIQ(getInfo, function (err, res) {
	                if (err) {
	                    handler(err);
	                } else {
	                    handler(null, res.infoList);
	                }
	            });
	            // let promise = new Promise((resolve, reject) => {
	            //     let iqResponseListener = new IQResponseListener(resolve, reject);
	            //     this.xmpClient.sendIQ(getInfo, iqResponseListener);
	            // });
	            // return promise.then((result) => {
	            //     return result.infoList;
	            // });
	        }
	    }, {
	        key: 'invoke',
	        value: function invoke(actionInfo, handler) {
	            var query = {
	                name: 'invoke',
	                ns: 'urn:bxmp:action',
	                body: actionInfo
	            };
	            var invoke = new _IQ2.default(_Type2.default.SET, query);
	            this.xmpClient.sendIQ(invoke, function (err, res) {
	                if (err) {
	                    handler(err);
	                } else {
	                    handler(null, res.resultList);
	                }
	            });
	            // let promise = new Promise((resolve, reject) => {
	            //     let iqResponseListener = new IQResponseListener(resolve, reject);
	            //     this.xmpClient.sendIQ(invoke, iqResponseListener);
	            // });
	            // return promise.then((result) => {
	            //     //TODO: here return what?
	            //     return result.argumentList;
	            // });
	        }
	    }, {
	        key: 'subscribeNotifications',
	        value: function subscribeNotifications(notificationInfo, handler, onNotification) {
	            var _this = this;

	            var query = {
	                name: 'subscribe',
	                ns: 'urn:bxmp:event',
	                body: notificationInfo
	            };
	            var subscribe = new _IQ2.default(_Type2.default.SET, query);
	            this.xmpClient.sendIQ(subscribe, function (err, res) {
	                if (err) {
	                    handler(err);
	                } else {
	                    var filter = new _MessageIdFilter2.default(res.subscriptionId);
	                    _this.xmpClient.addStanzaListener(filter, function (message) {
	                        onNotification(message.body.event.propertySet);
	                    });
	                    handler(null, res);
	                }
	            });

	            // let promise = new Promise((resolve, reject) => {
	            //     let iqResponseListener = new IQResponseListener(resolve, reject);
	            //     this.xmpClient.sendIQ(subscribe, iqResponseListener);
	            // });
	            //
	            // return promise.then((result) => {
	            //     let filter = new MessageIdFilter(result.subscriptionId);
	            //     let messageListener = new MessageListener(onNotification);
	            //     this.xmpClient.addStanzaListener(filter, messageListener);
	            //     return true;
	            // });
	        }
	    }, {
	        key: 'unsubscribeNotifications',
	        value: function unsubscribeNotifications(notificationInfo, handler) {
	            var _this2 = this;

	            var query = {
	                name: 'unsubscribe',
	                ns: 'urn:bxmp:event',
	                body: notificationInfo
	            };
	            var unsubscribe = new _IQ2.default(_Type2.default.SET, query);
	            this.xmpClient.sendIQ(unsubscribe, function (err, res) {
	                if (err) {
	                    handler(err);
	                } else {
	                    var filter = new _MessageIdFilter2.default(res.subscriptionId);
	                    _this2.xmpClient.removeStanzaListener(filter);
	                    handler(null, res);
	                }
	            });
	            // let promise = new Promise((resolve, reject) => {
	            //     let iqResponseListener = new IQResponseListener(resolve, reject);
	            //     this.xmpClient.sendIQ(unsubscribe, iqResponseListener);
	            // });
	            // return promise.then((result) => {
	            //     let filter = new MessageIdFilter(result.subscriptionId);
	            //     this.xmpClient.removeStanzaListener(filter);
	            //     return true;
	            // });
	        }
	    }]);

	    return DeviceManipulator;
	}();

	module.exports = DeviceManipulator;

	(function () {
	    if (window) {
	        window.DeviceManipulator = DeviceManipulator;
	    }
	})();

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _SioXmppConnection = __webpack_require__(2);

	var _SioXmppConnection2 = _interopRequireDefault(_SioXmppConnection);

	var _WsXmppConnection = __webpack_require__(6);

	var _WsXmppConnection2 = _interopRequireDefault(_WsXmppConnection);

	var _Type = __webpack_require__(5);

	var _Type2 = _interopRequireDefault(_Type);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var XmppClient = function () {
	    function XmppClient() {
	        _classCallCheck(this, XmppClient);

	        this.connection = new _WsXmppConnection2.default();
	    }

	    _createClass(XmppClient, [{
	        key: 'init',
	        value: function init(handler) {
	            this.connection.init(handler);
	        }
	    }, {
	        key: 'sendIQ',
	        value: function sendIQ(iq, handler) {
	            var iqResponseListener = function iqResponseListener(iqResponse) {
	                switch (iqResponse.type) {
	                    case _Type2.default.RESULT:
	                        handler(null, iqResponse.query.body);
	                        break;
	                    case _Type2.default.ERROR:
	                        handler(iqResponse.error);
	                        break;
	                    case _Type2.default.SET:
	                    case _Type2.default.GET:
	                        var error = {
	                            code: -1000,
	                            description: 'invalid iq response'
	                        };
	                        handler(error);
	                        break;
	                }
	            };
	            this.connection.sendIQ(iq, iqResponseListener);
	        }
	    }, {
	        key: 'sendMessage',
	        value: function sendMessage(message) {
	            this.connection.sendMessage(message);
	        }
	    }, {
	        key: 'addStanzaListener',
	        value: function addStanzaListener(stanzaFilter, stanzaListener) {
	            this.connection.addStanzaListener(stanzaFilter, stanzaListener);
	        }
	    }, {
	        key: 'removeStanzaListener',
	        value: function removeStanzaListener(stanzaFilter) {
	            this.connection.removeStanzaListener(stanzaFilter);
	        }
	    }]);

	    return XmppClient;
	}();

	module.exports = XmppClient;

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _XmppConnection = __webpack_require__(3);

	var _XmppConnection2 = _interopRequireDefault(_XmppConnection);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SioXmppConnection = function (_XmppConncction) {
	    _inherits(SioXmppConnection, _XmppConncction);

	    function SioXmppConnection() {
	        _classCallCheck(this, SioXmppConnection);

	        return _possibleConstructorReturn(this, (SioXmppConnection.__proto__ || Object.getPrototypeOf(SioXmppConnection)).call(this));
	    }

	    _createClass(SioXmppConnection, [{
	        key: 'init',
	        value: function init(handler) {
	            var _this2 = this;

	            var url = 'http://' + 'localhost' + ':8082';
	            if (window.location.hostname) {
	                url = 'http://' + window.location.hostname + ':8082';
	            }
	            this.connection = io.connect(url);
	            this.connection.on('connect', function (event) {
	                console.log('socketio connect url: ', url);
	                handler(null, event);
	            });
	            this.connection.on('message', function (data, ackServerCallback) {
	                console.log('socketio message: ', data);
	                var stanza = JSON.parse(data);
	                _this2.processStanza(stanza);
	            });
	            this.connection.on('disconnect', function (event) {
	                console.log('socketio disconnect: ', event);
	            });
	        }
	    }, {
	        key: 'sendStanza',
	        value: function sendStanza(stanza) {
	            var data = JSON.stringify(stanza);
	            this.connection.emit('message', data);
	        }
	    }]);

	    return SioXmppConnection;
	}(_XmppConnection2.default);

	module.exports = SioXmppConnection;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _IQReplyFilter = __webpack_require__(4);

	var _IQReplyFilter2 = _interopRequireDefault(_IQReplyFilter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var XmppConnection = function () {
	    function XmppConnection() {
	        _classCallCheck(this, XmppConnection);

	        this.id = 1000;
	        this.stanzaListeners = [];
	    }

	    _createClass(XmppConnection, [{
	        key: 'init',
	        value: function init(handler) {
	            console.log('init the connection');
	        }
	    }, {
	        key: 'close',
	        value: function close() {
	            console.log('close the connection');
	        }
	    }, {
	        key: 'sendIQ',
	        value: function sendIQ(iq, stanzaListener) {
	            var _this = this;

	            iq.id = (this.id++).toString();
	            var filter = new _IQReplyFilter2.default(iq);
	            var listener = function listener(stanza) {
	                stanzaListener(stanza);
	                _this.removeStanzaListener(filter);
	            };
	            this.addStanzaListener(filter, listener);
	            this.sendStanza(iq);
	        }
	    }, {
	        key: 'sendMessage',
	        value: function sendMessage(message) {
	            message.id = (this.id++).toString();
	            this.sendStanza(message);
	        }
	    }, {
	        key: 'addStanzaListener',
	        value: function addStanzaListener(stanzaFilter, stanzaListener) {
	            var listenerWrapper = {
	                filter: stanzaFilter,
	                listener: stanzaListener
	            };
	            this.stanzaListeners.push(listenerWrapper);
	        }
	    }, {
	        key: 'removeStanzaListener',
	        value: function removeStanzaListener(stanzaFilter) {
	            for (var i = 0; i < this.stanzaListeners.length; i++) {
	                if (stanzaFilter.equal(this.stanzaListeners[i].filter)) {
	                    this.stanzaListeners.splice(i, 1);
	                }
	            }
	        }
	    }, {
	        key: 'processStanza',
	        value: function processStanza(stanza) {
	            this.stanzaListeners.forEach(function (listenerWrapper) {
	                if (listenerWrapper.filter.accept(stanza)) {
	                    var listener = listenerWrapper.listener;
	                    if (listener != null) {
	                        listener(stanza);
	                    }
	                }
	            });
	        }
	    }, {
	        key: 'sendStanza',
	        value: function sendStanza(stanza) {
	            console.log('sendStanza', stanza);
	        }
	    }]);

	    return XmppConnection;
	}();

	module.exports = XmppConnection;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	reated by stephen on 16-6-14.
	

	var _Type = __webpack_require__(5);

	var _Type2 = _interopRequireDefault(_Type);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var IQReplyFilter = function () {
	    function IQReplyFilter(iq) {
	        _classCallCheck(this, IQReplyFilter);

	        this.stanzaId = iq.id;
	    }

	    _createClass(IQReplyFilter, [{
	        key: 'accept',
	        value: function accept(stanza) {
	            if (stanza.element != 'iq') {
	                return false;
	            }

	            if (stanza.type == _Type2.default.GET || stanza.type == _Type2.default.SET) {
	                return false;
	            }

	            return this.stanzaId === stanza.id;
	        }
	    }, {
	        key: 'equal',
	        value: function equal(filter) {
	            if (this === filter) {
	                return true;
	            }

	            return this.stanzaId === filter.stanzaId;
	        }
	    }]);

	    return IQReplyFilter;
	}();

	module.exports = IQReplyFilter;

/***/ },
/* 5 */
/***/ function(module, exports) {

	'use strict';

	var Type = {
	    SET: 'set',
	    GET: 'get',
	    RESULT: 'result',
	    ERROR: 'error'
	};

	module.exports = Type;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _XmppConnection = __webpack_require__(3);

	var _XmppConnection2 = _interopRequireDefault(_XmppConnection);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var WsXmppConnection = function (_XmppConncction) {
	    _inherits(WsXmppConnection, _XmppConncction);

	    function WsXmppConnection() {
	        _classCallCheck(this, WsXmppConnection);

	        return _possibleConstructorReturn(this, (WsXmppConnection.__proto__ || Object.getPrototypeOf(WsXmppConnection)).call(this));
	    }

	    _createClass(WsXmppConnection, [{
	        key: 'init',
	        value: function init(handler) {
	            var _this2 = this;

	            var url = 'ws://' + 'localhost' + ':8082' + '/api';
	            if (window.location.hostname) {
	                url = 'ws://' + window.location.hostname + ':8082' + '/api';
	            }
	            this.connection = new WebSocket(url);
	            this.connection.onopen = function (event) {
	                console.log('connection onopen url: ', url);
	                handler(null, event);
	            };
	            this.connection.onmessage = function (event) {
	                console.log('connection onmessage: ' + event.data);
	                var stanza = JSON.parse(event.data);
	                _this2.processStanza(stanza);
	            };
	            this.connection.onclose = function (event) {
	                console.log('connection onclose');
	            };
	            this.connection.onerror = function (event) {
	                console.log('connection onerror', event);
	                handler(event);
	            };
	        }
	    }, {
	        key: 'sendStanza',
	        value: function sendStanza(stanza) {
	            var data = JSON.stringify(stanza);
	            this.connection.send(data);
	        }
	    }]);

	    return WsXmppConnection;
	}(_XmppConnection2.default);

	module.exports = WsXmppConnection;

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Type = __webpack_require__(5);

	var _Type2 = _interopRequireDefault(_Type);

	var _Stanza2 = __webpack_require__(8);

	var _Stanza3 = _interopRequireDefault(_Stanza2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var IQ = function (_Stanza) {
	    _inherits(IQ, _Stanza);

	    function IQ(type, query) {
	        _classCallCheck(this, IQ);

	        var _this = _possibleConstructorReturn(this, (IQ.__proto__ || Object.getPrototypeOf(IQ)).call(this, 'iq'));

	        _this.type = type;
	        _this.query = query;
	        return _this;
	    }

	    _createClass(IQ, [{
	        key: 'getNamespace',
	        value: function getNamespace() {
	            return this.query.ns;
	        }
	    }, {
	        key: 'getName',
	        value: function getName() {
	            return this.query.name;
	        }
	    }, {
	        key: 'getBody',
	        value: function getBody() {
	            return this.query.body;
	        }
	    }, {
	        key: 'isRequest',
	        value: function isRequest() {
	            return this.type == _Type2.default.GET || this.type == _Type2.default.SET;
	        }
	    }, {
	        key: 'isResponse',
	        value: function isResponse() {
	            return this.type == _Type2.default.RESULT || this.type == _Type2.default.ERROR;
	        }
	    }]);

	    return IQ;
	}(_Stanza3.default);

	module.exports = IQ;

/***/ },
/* 8 */
/***/ function(module, exports) {

	"use strict";

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * Created by stephen on 16-6-14.
	 */

	var Stanza = function Stanza(element) {
	    _classCallCheck(this, Stanza);

	    this.element = element;
	    this.id = 0;
	};

	module.exports = Stanza;

/***/ },
/* 9 */
/***/ function(module, exports) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * Created by stephen on 16-6-14.
	 */

	var MessageIdFilter = function () {
	    function MessageIdFilter(messageId) {
	        _classCallCheck(this, MessageIdFilter);

	        this.messageId = messageId;
	    }

	    _createClass(MessageIdFilter, [{
	        key: 'accept',
	        value: function accept(stanza) {
	            if (stanza.element != 'message') {
	                return false;
	            }
	            return this.messageId === stanza.body.subscriptionId;
	        }
	    }, {
	        key: 'equal',
	        value: function equal(filter) {
	            if (this === filter) {
	                return true;
	            }

	            return this.messageId === filter.messageId;
	        }
	    }]);

	    return MessageIdFilter;
	}();

	module.exports = MessageIdFilter;

/***/ }
/******/ ]);